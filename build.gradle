plugins {
    id 'java-library'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'org.springframework.boot' version '2.3.5.RELEASE'
}

group 'com.exaucae.traccar.client.websocket'
version '0.0.1-SNAPSHOT'

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java-library'

ext {
    mapstructVersion = '1.4.1.Final'
    jeasyVersion = '4.2.0'
    springBootVersion = "2.3.5.RELEASE"
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation("com.google.guava:guava:31.0.1-jre")


    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

    compileOnly 'com.google.gwt:gwt-user:2.9.0'


    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation "org.jeasy:easy-random-core:$jeasyVersion"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
    }
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_10
    targetCompatibility = JavaVersion.VERSION_1_10
}

configurations {
    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf { it.buildDependencies.getDependencies(null).contains(jar) }
        it.outgoing.artifact(bootJar)
    }
}
compileJava {
    options.annotationProcessorPath = configurations.annotationProcessor
    options.compilerArgs << "-Amapstruct.defaultComponentModel=spring"
}
